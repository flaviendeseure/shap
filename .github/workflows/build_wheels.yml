name: Build wheels

on:
  release:
    types: [published]

  # Enable manual run
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022, macOS-12]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.13.1

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
          name: bdist_files

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-20.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Build sdist (pep517)
        run: |
          python -m pip install build
          python -m build --sdist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: sdist_files
          path: dist/*.tar.gz

  publish_wheels:
    name: Publish wheels on pypi
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: bdist_files
          path: dist

      - uses: actions/download-artifact@v3
        with:
          name: sdist_files
          path: dist

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_TOKEN  }}  # TODO: confirm this token exists (or use trusted publishing instead)
          repository-url: https://test.pypi.org/legacy/

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: github.event_name == 'release' && github.event.action == 'created'
        with:
          password: ${{ secrets.PYPI_TOKEN }}
